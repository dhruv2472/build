{"version":3,"file":"static/js/820.f8c16193.chunk.js","mappings":"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","sources":["components/dashboard/Tables/JobItem.jsx","webpack://Job Portal with AI Resume Analyzer/./src/Job Provider/Components/Counters/ProviderCard.module.css?27a6","Job Provider/Components/Counters/ProviderCard.jsx","Job Provider/Components/Counters/ProviderCards.jsx","webpack://Job Portal with AI Resume Analyzer/./src/Job Provider/Components/Table/Table.module.css?7eb0","Job Provider/Components/Table/dashboardTable.js","pages/ProviderPages/ProvDashboard.js","util/dateFormatter.js","../node_modules/react-bootstrap/esm/Table.js","webpack://Job Portal with AI Resume Analyzer/./src/components/dashboard/Counters/AdminCard.module.css?9f3c","webpack://Job Portal with AI Resume Analyzer/./src/components/dashboard/Tables/UserItem.module.css?c15a"],"sourcesContent":["import classes from \"./UserItem.module.css\";\r\nimport dateFormatter from \"../../../util/dateFormatter\";\r\n\r\nconst JobItem = (props) => {\r\n  let formattedCreatedAt = dateFormatter(props.jobInfo.createdAt);\r\n  let formattedUpdatedAt = dateFormatter(props.jobInfo.updatedAt);\r\n  return (\r\n    <tr className={classes.row}>\r\n      {/* <td>{props.jobInfo.jobId}</td> */}\r\n      <td>{props.jobInfo.title}</td>\r\n      <td>{props.jobInfo.category}</td>\r\n      <td>{formattedCreatedAt}</td>\r\n      <td>{formattedUpdatedAt}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default JobItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ProviderCard_card__Z2xUG\",\"logo-line\":\"ProviderCard_logo-line__JcaIM\",\"logo\":\"ProviderCard_logo__r1M-I\",\"card-heading\":\"ProviderCard_card-heading__ZKIse\",\"heading\":\"ProviderCard_heading__ACzGW\",\"caption\":\"ProviderCard_caption__FUvY9\",\"row\":\"ProviderCard_row__q4qDQ\",\"col\":\"ProviderCard_col__eKV1v\"};","import classes from \"./ProviderCard.module.css\";\r\n\r\nconst ProviderCard = ({ color, ...props }) => {\r\n  let logoBG = { backgroundColor: color };\r\n  return (\r\n    <div className={classes.card}>\r\n      <div className={classes[\"logo-line\"]}>\r\n        <div className={classes.logo} style={logoBG}>\r\n          {/* <img src={props.logo} alt=\"Total Jobs\" /> */}\r\n          <span>{props.logo}</span>\r\n        </div>\r\n        <div className={classes[\"card-heading\"]}>\r\n          <span className={classes.heading}>{props.heading}</span>\r\n          <h4>{props.statistics}</h4>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className={classes.caption}>\r\n        <p>{props.caption}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderCard;\r\n","import ProviderCard from \"./ProviderCard\";\r\n\r\nimport React from \"react\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport classes from \"../../../components/dashboard/Counters/AdminCard.module.css\";\r\nconst ProviderCards = ({ stats, ...props }) => {\r\n  return (\r\n    <Container>\r\n      <Row className={classes.row}>\r\n        <Col>\r\n          <ProviderCard\r\n            logo={<i className=\"bi bi-briefcase-fill\"></i>}\r\n            heading={\"Total Jobs\"}\r\n            statistics={stats.jobsCount}\r\n            caption={\"\"}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <ProviderCard\r\n            color=\"#ff1a1a\"\r\n            logo={<i className=\"bi bi-file-earmark-person-fill\"></i>}\r\n            heading={\"Total Applicants\"}\r\n            statistics={stats.applicantsCount}\r\n            caption={\"\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProviderCards;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"rowStyle\":\"Table_rowStyle__KENGr\",\"span\":\"Table_span__Nt8Lw\",\"button\":\"Table_button__RQGVH\",\"tableHeader\":\"Table_tableHeader__QJw+l\",\"tableBox\":\"Table_tableBox__F05cl\"};","import React from \"react\";\r\nimport classes from \"./Table.module.css\";\r\nimport JobItem from \"../../../components/dashboard/Tables/JobItem\";\r\n// import classes from \"../ManageJobs/ManageTab.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Table, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst Table1 = (props) => {\r\n  const navigate = useNavigate();\r\n  const recentJobsHandler = () => {\r\n    navigate(\"/manage-jobs\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row className={classes.rowStyle}>\r\n        <Col>\r\n          <span className={`${classes.span} float-start`}>Recent Jobs</span>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            className={`${classes.button} float-end`}\r\n            onClick={recentJobsHandler}\r\n          >\r\n            View All\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <div className={classes.tableBox}>\r\n        <Table striped hover>\r\n          <thead>\r\n            <tr className={classes.tableHeader}>\r\n              <th>Title</th>\r\n              <th>Category</th>\r\n              <th>First Created</th>\r\n              <th>Last Modified</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.jobData.map((job) => (\r\n              <JobItem jobInfo={job} key={job._id} />\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        {props.jobData.length === 0 && (\r\n          <p className=\"text-center fw-bold\">No jobs data!</p>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Table1;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ProviderCards from \"../../Job Provider/Components/Counters/ProviderCards\";\r\n\r\nimport Table1 from \"../../Job Provider/Components/Table/dashboardTable.js\";\r\nimport Config from \"../../config/Config.json\";\r\nimport axios from \"axios\";\r\nimport SpinnerComponent from \"../../components/UI/SpinnerComponent\";\r\n\r\nexport default function ProvDashboard() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    jobsCount: 0,\r\n    applicantsCount: 0,\r\n  });\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  useEffect(() => {\r\n    setShowSpinner(true);\r\n    axios\r\n      .get(`${Config.SERVER_URL + \"provider/dashboard-stats\"}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setShowSpinner(false);\r\n        setStats(res.data.stats);\r\n      })\r\n      .catch((er) => {\r\n        setShowSpinner(false);\r\n        console.log(er);\r\n      });\r\n\r\n    axios\r\n      .get(`${Config.SERVER_URL + \"provider/dashboard-recents\"}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setShowSpinner(false);\r\n        setJobs(res.data.recentJobs);\r\n      })\r\n      .catch((err) => {\r\n        setShowSpinner(false);\r\n        console.log(err);\r\n      });\r\n    document.title = Config.TITLE.DASHBOARD;\r\n  }, [token]);\r\n  return (\r\n    <div>\r\n      <ProviderCards stats={stats} />\r\n      {/* <CountCard /> */}\r\n      {showSpinner && <SpinnerComponent />}\r\n      {!showSpinner && <Table1 jobData={jobs} />}\r\n    </div>\r\n  );\r\n}\r\n","const dateFormatter = (givenDate) => {\r\n  const date = new Date(givenDate);\r\n\r\n  return date.toLocaleString(\"en-gb\", {\r\n    day: \"numeric\",\r\n    month: \"numeric\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n  });\r\n};\r\n\r\nexport default dateFormatter;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AdminCard_card__Fc1zl\",\"logo-line\":\"AdminCard_logo-line__f9w7V\",\"logo\":\"AdminCard_logo__hJ3SF\",\"card-heading\":\"AdminCard_card-heading__LYR1s\",\"heading\":\"AdminCard_heading__UwtHN\",\"caption\":\"AdminCard_caption__eq+nH\"};","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"UserItem_row__2kDCY\"};"],"names":["props","formattedCreatedAt","dateFormatter","jobInfo","createdAt","formattedUpdatedAt","updatedAt","className","classes","title","category","color","logoBG","backgroundColor","style","logo","heading","statistics","caption","stats","Container","Row","Col","jobsCount","applicantsCount","navigate","useNavigate","Button","onClick","Table","striped","hover","jobData","map","job","JobItem","_id","length","ProvDashboard","useState","jobs","setJobs","setStats","showSpinner","setShowSpinner","token","localStorage","getItem","useEffect","axios","Config","headers","Authorization","then","res","data","catch","er","console","log","recentJobs","err","document","SpinnerComponent","givenDate","Date","toLocaleString","day","month","year","hour","minute","second","React","ref","bsPrefix","bordered","borderless","size","variant","responsive","decoratedBsPrefix","useBootstrapPrefix","classNames","table","_jsx","responsiveClass","children"],"sourceRoot":""}